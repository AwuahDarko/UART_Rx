

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 31 15:06:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000DF8                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _index
    76  000DF8  FFFF               	dw	65535
    77                           
    78                           ;initializer for _row
    79  000DFA  0001               	dw	1
    80                           
    81                           ;initializer for _pos
    82  000DFC  FFFF               	dw	65535
    83  0000                     _LATD	set	3980
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISCbits	set	3988
    87  0000                     _SPBRG	set	4015
    88  0000                     _RCREG	set	4014
    89  0000                     _LATC1	set	31833
    90  0000                     _LATC0	set	31832
    91  0000                     _IRCF2	set	32414
    92  0000                     _IRCF1	set	32413
    93  0000                     _IRCF0	set	32412
    94  0000                     _CREN	set	32092
    95  0000                     _GIE	set	32663
    96  0000                     _PEIE	set	32662
    97  0000                     _RCIE	set	31981
    98  0000                     _SPEN	set	32095
    99  0000                     _SYNC	set	32100
   100  0000                     _BRGH	set	32098
   101  0000                     _RCIF	set	31989
   102                           
   103                           	psect	smallconst
   104  000800                     __psmallconst:
   105                           	opt stack 0
   106  000800  00                 	db	0
   107  000801                     STR_1:
   108  000801  49                 	db	73	;'I'
   109  000802  6E                 	db	110	;'n'
   110  000803  69                 	db	105	;'i'
   111  000804  74                 	db	116	;'t'
   112  000805  69                 	db	105	;'i'
   113  000806  61                 	db	97	;'a'
   114  000807  6C                 	db	108	;'l'
   115  000808  69                 	db	105	;'i'
   116  000809  7A                 	db	122	;'z'
   117  00080A  69                 	db	105	;'i'
   118  00080B  6E                 	db	110	;'n'
   119  00080C  67                 	db	103	;'g'
   120  00080D  2E                 	db	46
   121  00080E  2E                 	db	46
   122  00080F  2E                 	db	46
   123  000810  00                 	db	0
   124  000811                     STR_2:
   125  000811  57                 	db	87	;'W'
   126  000812  65                 	db	101	;'e'
   127  000813  6C                 	db	108	;'l'
   128  000814  63                 	db	99	;'c'
   129  000815  6F                 	db	111	;'o'
   130  000816  6D                 	db	109	;'m'
   131  000817  65                 	db	101	;'e'
   132  000818  21                 	db	33
   133  000819  00                 	db	0
   134  00081A                     STR_17:
   135  00081A  23                 	db	35
   136  00081B  00                 	db	0
   137  00081C                     STR_15:
   138  00081C  2A                 	db	42
   139  00081D  00                 	db	0
   140  00081E                     STR_16:
   141  00081E  30                 	db	48	;'0'
   142  00081F  00                 	db	0
   143  000820                     STR_3:
   144  000820  31                 	db	49	;'1'
   145  000821  00                 	db	0
   146  000822                     STR_4:
   147  000822  32                 	db	50	;'2'
   148  000823  00                 	db	0
   149  000824                     STR_5:
   150  000824  33                 	db	51	;'3'
   151  000825  00                 	db	0
   152  000826                     STR_7:
   153  000826  34                 	db	52	;'4'
   154  000827  00                 	db	0
   155  000828                     STR_8:
   156  000828  35                 	db	53	;'5'
   157  000829  00                 	db	0
   158  00082A                     STR_9:
   159  00082A  36                 	db	54	;'6'
   160  00082B  00                 	db	0
   161  00082C                     STR_11:
   162  00082C  37                 	db	55	;'7'
   163  00082D  00                 	db	0
   164  00082E                     STR_12:
   165  00082E  38                 	db	56	;'8'
   166  00082F  00                 	db	0
   167  000830                     STR_13:
   168  000830  39                 	db	57	;'9'
   169  000831  00                 	db	0
   170  000832                     STR_6:
   171  000832  41                 	db	65	;'A'
   172  000833  00                 	db	0
   173  000834                     STR_10:
   174  000834  42                 	db	66	;'B'
   175  000835  00                 	db	0
   176  000836                     STR_14:
   177  000836  43                 	db	67	;'C'
   178  000837  00                 	db	0
   179  000838                     STR_18:
   180  000838  44                 	db	68	;'D'
   181  000839  00                 	db	0
   182                           
   183                           ; #config settings
   184  00083A  00                 	db	0	; dummy byte at the end
   185  0000                     
   186                           	psect	cinit
   187  000BC0                     __pcinit:
   188                           	opt stack 0
   189  000BC0                     start_initialization:
   190                           	opt stack 0
   191  000BC0                     __initialization:
   192                           	opt stack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (6 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196  000BC0  0EF8               	movlw	low __pidataCOMRAM
   197  000BC2  6EF6               	movwf	tblptrl,c
   198  000BC4  0E0D               	movlw	high __pidataCOMRAM
   199  000BC6  6EF7               	movwf	tblptrh,c
   200  000BC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201  000BCA  6EF8               	movwf	tblptru,c
   202  000BCC  EE00  F034         	lfsr	0,__pdataCOMRAM
   203  000BD0  EE10 F006          	lfsr	1,6
   204  000BD4                     copy_data0:
   205  000BD4  0009               	tblrd		*+
   206  000BD6  CFF5 FFEE          	movff	tablat,postinc0
   207  000BDA  50E5               	movf	postdec1,w,c
   208  000BDC  50E1               	movf	fsr1l,w,c
   209  000BDE  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to BANK0 (100 bytes)
   212  000BE0  EE00  F060         	lfsr	0,__pbssBANK0
   213  000BE4  0E64               	movlw	100
   214  000BE6                     clear_0:
   215  000BE6  6AEE               	clrf	postinc0,c
   216  000BE8  06E8               	decf	wreg,f,c
   217  000BEA  E1FD               	bnz	clear_0
   218  000BEC                     end_of_initialization:
   219                           	opt stack 0
   220  000BEC                     __end_of__initialization:
   221                           	opt stack 0
   222  000BEC  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223  000BEE  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224  000BF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225  000BF2  6EF8               	movwf	tblptru,c
   226  000BF4  0100               	movlb	0
   227  000BF6  EF85  F005         	goto	_main	;jump to C main() function
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           postdec1	equ	0xFE5
   235                           fsr1l	equ	0xFE1
   236                           
   237                           	psect	dataCOMRAM
   238  000034                     __pdataCOMRAM:
   239                           	opt stack 0
   240  000034                     _index:
   241                           	opt stack 0
   242  000034                     	ds	2
   243  000036                     _row:
   244                           	opt stack 0
   245  000036                     	ds	2
   246  000038                     _pos:
   247                           	opt stack 0
   248  000038                     	ds	2
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1l	equ	0xFE1
   257                           
   258                           	psect	bssBANK0
   259  000060                     __pbssBANK0:
   260                           	opt stack 0
   261  000060                     _UART_Buffer:
   262                           	opt stack 0
   263  000060                     	ds	100
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           postdec1	equ	0xFE5
   271                           fsr1l	equ	0xFE1
   272                           
   273                           	psect	cstackCOMRAM
   274  000001                     __pcstackCOMRAM:
   275                           	opt stack 0
   276  000001                     i2MSdelay@val:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x0
   280  000001                     	ds	2
   281  000003                     i2MSdelay@i:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000003                     	ds	2
   286  000005                     i2MSdelay@j:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x4
   290  000005                     	ds	2
   291  000007                     i2LCD_Command@cmd:
   292                           	opt stack 0
   293  000007                     i2LCD_Char@dat:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x6
   297  000007                     	ds	1
   298  000008                     i2LCD_String@msg:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x7
   302  000008                     	ds	2
   303  00000A                     i2LCD_String_xy@pos:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x9
   307  00000A                     	ds	1
   308  00000B                     i2LCD_String_xy@msg:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00000B                     	ds	2
   313  00000D                     i2LCD_String_xy@row:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xC
   317  00000D                     	ds	1
   318  00000E                     i2LCD_String_xy@location:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xD
   322  00000E                     	ds	1
   323  00000F                     ??_readBuffer:
   324                           
   325                           ; 1 bytes @ 0xE
   326  00000F                     	ds	1
   327  000010                     readBuffer@i:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xF
   331  000010                     	ds	2
   332  000012                     ??_ISR:
   333                           
   334                           ; 1 bytes @ 0x11
   335  000012                     	ds	18
   336  000024                     MSdelay@val:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x23
   340  000024                     	ds	2
   341  000026                     MSdelay@i:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x25
   345  000026                     	ds	2
   346  000028                     MSdelay@j:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x27
   350  000028                     	ds	2
   351  00002A                     LCD_Command@cmd:
   352                           	opt stack 0
   353  00002A                     LCD_Char@dat:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x29
   357  00002A                     	ds	1
   358  00002B                     LCD_String@msg:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x2A
   362  00002B                     	ds	2
   363  00002D                     LCD_String_xy@pos:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x2C
   367  00002D                     	ds	1
   368  00002E                     LCD_String_xy@msg:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x2D
   372  00002E                     	ds	2
   373  000030                     LCD_String_xy@row:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x2F
   377  000030                     	ds	1
   378  000031                     LCD_String_xy@location:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x30
   382  000031                     	ds	1
   383  000032                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x31
   386  000032                     	ds	2
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 43 in file "main.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         0       0       0       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0
   417 ;;      Temps:          2       0       0       0       0       0       0       0       0
   418 ;;      Totals:         2       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels required when called:   10
   421 ;; This function calls:
   422 ;;		_FOSC
   423 ;;		_LCD_Clear
   424 ;;		_LCD_Init
   425 ;;		_LCD_String_xy
   426 ;;		_initUART_rx
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text0
   433  000B0A                     __ptext0:
   434                           	opt stack 0
   435  000B0A                     _main:
   436                           	opt stack 21
   437                           
   438                           ;main.c: 44: FOSC();
   439                           
   440                           ;incstack = 0
   441  000B0A  ECF4  F006         	call	_FOSC	;wreg free
   442                           
   443                           ;main.c: 45: initUART_rx();
   444  000B0E  ECE4  F006         	call	_initUART_rx	;wreg free
   445                           
   446                           ;main.c: 46: LCD_Init();
   447  000B12  EC6B  F006         	call	_LCD_Init	;wreg free
   448                           
   449                           ;main.c: 48: LCD_String_xy(1,0,"Initializing...");
   450  000B16  0E00               	movlw	0
   451  000B18  6E2D               	movwf	LCD_String_xy@pos,c
   452  000B1A  0E01               	movlw	low STR_1
   453  000B1C  6E2E               	movwf	LCD_String_xy@msg,c
   454  000B1E  0E08               	movlw	high STR_1
   455  000B20  6E2F               	movwf	LCD_String_xy@msg+1,c
   456  000B22  0E01               	movlw	1
   457  000B24  ECFD  F005         	call	_LCD_String_xy
   458                           
   459                           ;main.c: 49: _delay((unsigned long)((1000)*(8000000/4000.0)));
   460  000B28  0E0B               	movlw	11
   461  000B2A  6E33               	movwf	(??_main+1)& (0+255),c
   462  000B2C  0E26               	movlw	38
   463  000B2E  6E32               	movwf	??_main& (0+255),c
   464  000B30  0E5E               	movlw	94
   465  000B32                     u337:
   466  000B32  2EE8               	decfsz	wreg,f,c
   467  000B34  D7FE               	bra	u337
   468  000B36  2E32               	decfsz	??_main& (0+255),f,c
   469  000B38  D7FC               	bra	u337
   470  000B3A  2E33               	decfsz	(??_main+1)& (0+255),f,c
   471  000B3C  D7FA               	bra	u337
   472                           
   473                           ;main.c: 50: LCD_Clear();
   474  000B3E  ECF0  F006         	call	_LCD_Clear	;wreg free
   475                           
   476                           ;main.c: 51: LCD_String_xy(1,0,"Welcome!");
   477  000B42  0E00               	movlw	0
   478  000B44  6E2D               	movwf	LCD_String_xy@pos,c
   479  000B46  0E11               	movlw	low STR_2
   480  000B48  6E2E               	movwf	LCD_String_xy@msg,c
   481  000B4A  0E08               	movlw	high STR_2
   482  000B4C  6E2F               	movwf	LCD_String_xy@msg+1,c
   483  000B4E  0E01               	movlw	1
   484  000B50  ECFD  F005         	call	_LCD_String_xy
   485                           
   486                           ;main.c: 52: _delay((unsigned long)((1000)*(8000000/4000.0)));
   487  000B54  0E0B               	movlw	11
   488  000B56  6E33               	movwf	(??_main+1)& (0+255),c
   489  000B58  0E26               	movlw	38
   490  000B5A  6E32               	movwf	??_main& (0+255),c
   491  000B5C  0E5E               	movlw	94
   492  000B5E                     u347:
   493  000B5E  2EE8               	decfsz	wreg,f,c
   494  000B60  D7FE               	bra	u347
   495  000B62  2E32               	decfsz	??_main& (0+255),f,c
   496  000B64  D7FC               	bra	u347
   497  000B66  2E33               	decfsz	(??_main+1)& (0+255),f,c
   498  000B68  D7FA               	bra	u347
   499                           
   500                           ;main.c: 53: LCD_Clear();
   501  000B6A  ECF0  F006         	call	_LCD_Clear	;wreg free
   502  000B6E                     l81:
   503                           
   504                           ;main.c: 56: {
   505  000B6E  D7FF               	goto	l81
   506  000B70                     __end_of_main:
   507                           	opt stack 0
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517 ;; *************** function _initUART_rx *****************
   518 ;; Defined at:
   519 ;;		line 64 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   533 ;;      Params:         0       0       0       0       0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    6
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text1
   548  000DC8                     __ptext1:
   549                           	opt stack 0
   550  000DC8                     _initUART_rx:
   551                           	opt stack 24
   552                           
   553                           ;main.c: 67: BRGH = 1;
   554                           
   555                           ;incstack = 0
   556  000DC8  84AC               	bsf	4012,2,c	;volatile
   557                           
   558                           ;main.c: 68: SPBRG = 52;
   559  000DCA  0E34               	movlw	52
   560  000DCC  6EAF               	movwf	4015,c	;volatile
   561                           
   562                           ;main.c: 70: SYNC = 0;
   563  000DCE  98AC               	bcf	4012,4,c	;volatile
   564                           
   565                           ;main.c: 71: SPEN = 1;
   566  000DD0  8EAB               	bsf	4011,7,c	;volatile
   567                           
   568                           ;main.c: 73: TRISCbits.RC6 = 1;
   569  000DD2  8C94               	bsf	3988,6,c	;volatile
   570                           
   571                           ;main.c: 74: TRISCbits.RC7 = 1;
   572  000DD4  8E94               	bsf	3988,7,c	;volatile
   573                           
   574                           ;main.c: 77: RCIE = 1;
   575  000DD6  8A9D               	bsf	3997,5,c	;volatile
   576                           
   577                           ;main.c: 78: PEIE = 1;
   578  000DD8  8CF2               	bsf	intcon,6,c	;volatile
   579                           
   580                           ;main.c: 79: GIE = 1;
   581  000DDA  8EF2               	bsf	intcon,7,c	;volatile
   582                           
   583                           ;main.c: 81: CREN = 1;
   584  000DDC  88AB               	bsf	4011,4,c	;volatile
   585  000DDE  0012               	return		;funcret
   586  000DE0                     __end_of_initUART_rx:
   587                           	opt stack 0
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           intcon	equ	0xFF2
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           postdec1	equ	0xFE5
   596                           fsr1l	equ	0xFE1
   597                           
   598 ;; *************** function _LCD_String_xy *****************
   599 ;; Defined at:
   600 ;;		line 136 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  row             1    wreg     unsigned char 
   603 ;;  pos             1   44[COMRAM] unsigned char 
   604 ;;  msg             2   45[COMRAM] PTR const unsigned char 
   605 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
   606 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
   607 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
   608 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
   609 ;;		 -> STR_2(9), STR_1(16), 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  row             1   47[COMRAM] unsigned char 
   612 ;;  location        1   48[COMRAM] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         3       0       0       0       0       0       0       0       0
   623 ;;      Locals:         2       0       0       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0
   625 ;;      Totals:         5       0       0       0       0       0       0       0       0
   626 ;;Total ram usage:        5 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    9
   629 ;; This function calls:
   630 ;;		_LCD_Command
   631 ;;		_LCD_String
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text2
   638  000BFA                     __ptext2:
   639                           	opt stack 0
   640  000BFA                     _LCD_String_xy:
   641                           	opt stack 21
   642                           
   643                           ;incstack = 0
   644                           ;LCD_String_xy@row stored from wreg
   645  000BFA  6E30               	movwf	LCD_String_xy@row,c
   646                           
   647                           ;main.c: 138: char location=0;
   648  000BFC  0E00               	movlw	0
   649  000BFE  6E31               	movwf	LCD_String_xy@location,c
   650                           
   651                           ;main.c: 139: if(row<=1)
   652  000C00  0E02               	movlw	2
   653  000C02  6030               	cpfslt	LCD_String_xy@row,c
   654  000C04  D008               	goto	l111
   655                           
   656                           ;main.c: 140: {
   657                           ;main.c: 141: location=(0x80) | ((pos) & 0x0f);
   658  000C06  502D               	movf	LCD_String_xy@pos,w,c
   659  000C08  0B0F               	andlw	15
   660  000C0A  0980               	iorlw	128
   661  000C0C  6E31               	movwf	LCD_String_xy@location,c
   662                           
   663                           ;main.c: 142: LCD_Command(location);
   664  000C0E  5031               	movf	LCD_String_xy@location,w,c
   665  000C10  ECBA  F006         	call	_LCD_Command
   666                           
   667                           ;main.c: 143: }
   668  000C14  D007               	goto	l112
   669  000C16                     l111:
   670                           
   671                           ;main.c: 144: else
   672                           ;main.c: 145: {
   673                           ;main.c: 146: location=(0xC0) | ((pos) & 0x0f);
   674  000C16  502D               	movf	LCD_String_xy@pos,w,c
   675  000C18  0B0F               	andlw	15
   676  000C1A  09C0               	iorlw	192
   677  000C1C  6E31               	movwf	LCD_String_xy@location,c
   678                           
   679                           ;main.c: 147: LCD_Command(location);
   680  000C1E  5031               	movf	LCD_String_xy@location,w,c
   681  000C20  ECBA  F006         	call	_LCD_Command
   682  000C24                     l112:
   683                           
   684                           ;main.c: 148: }
   685                           ;main.c: 149: LCD_String(msg);
   686  000C24  C02E  F02B         	movff	LCD_String_xy@msg,LCD_String@msg
   687  000C28  C02F  F02C         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   688  000C2C  EC82  F006         	call	_LCD_String	;wreg free
   689  000C30  0012               	return		;funcret
   690  000C32                     __end_of_LCD_String_xy:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           intcon	equ	0xFF2
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1l	equ	0xFE1
   701                           
   702 ;; *************** function _LCD_String *****************
   703 ;; Defined at:
   704 ;;		line 127 in file "main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  msg             2   42[COMRAM] PTR const unsigned char 
   707 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
   708 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
   709 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
   710 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
   711 ;;		 -> STR_2(9), STR_1(16), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   723 ;;      Params:         2       0       0       0       0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0
   726 ;;      Totals:         2       0       0       0       0       0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    8
   730 ;; This function calls:
   731 ;;		_LCD_Char
   732 ;; This function is called by:
   733 ;;		_LCD_String_xy
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text3
   738  000D04                     __ptext3:
   739                           	opt stack 0
   740  000D04                     _LCD_String:
   741                           	opt stack 21
   742                           
   743                           ;main.c: 129: while((*msg)!=0)
   744                           
   745                           ;incstack = 0
   746  000D04  D00A               	goto	l105
   747  000D06                     
   748                           ;main.c: 130: {
   749                           ;main.c: 131: LCD_Char(*msg);
   750  000D06  C02B  FFF6         	movff	LCD_String@msg,tblptrl
   751  000D0A  C02C  FFF7         	movff	LCD_String@msg+1,tblptrh
   752  000D0E                     	if	0	;tblptru may be non-zero
   753  000D0E                     	endif
   754  000D0E                     	if	0	;tblptru may be non-zero
   755  000D0E                     	endif
   756  000D0E  0008               	tblrd		*
   757  000D10  50F5               	movf	tablat,w,c
   758  000D12  ECAC  F006         	call	_LCD_Char
   759                           
   760                           ;main.c: 132: msg++;
   761  000D16  4A2B               	infsnz	LCD_String@msg,f,c
   762  000D18  2A2C               	incf	LCD_String@msg+1,f,c
   763  000D1A                     l105:
   764  000D1A  C02B  FFF6         	movff	LCD_String@msg,tblptrl
   765  000D1E  C02C  FFF7         	movff	LCD_String@msg+1,tblptrh
   766  000D22                     	if	0	;tblptru may be non-zero
   767  000D22                     	endif
   768  000D22                     	if	0	;tblptru may be non-zero
   769  000D22                     	endif
   770  000D22  0008               	tblrd		*
   771  000D24  50F5               	movf	tablat,w,c
   772  000D26  0900               	iorlw	0
   773  000D28  B4D8               	btfsc	status,2,c
   774  000D2A  0012               	return	
   775  000D2C  D7EC               	goto	l106
   776  000D2E                     __end_of_LCD_String:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           intcon	equ	0xFF2
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           status	equ	0xFD8
   788                           
   789 ;; *************** function _LCD_Char *****************
   790 ;; Defined at:
   791 ;;		line 117 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  dat             1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  dat             1   41[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         1       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        1 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    7
   812 ;; This function calls:
   813 ;;		_MSdelay
   814 ;; This function is called by:
   815 ;;		_LCD_String
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text4
   820  000D58                     __ptext4:
   821                           	opt stack 0
   822  000D58                     _LCD_Char:
   823                           	opt stack 21
   824                           
   825                           ;incstack = 0
   826                           ;LCD_Char@dat stored from wreg
   827  000D58  6E2A               	movwf	LCD_Char@dat,c
   828                           
   829                           ;main.c: 119: LATD= dat;
   830  000D5A  C02A  FF8C         	movff	LCD_Char@dat,3980	;volatile
   831                           
   832                           ;main.c: 120: LATC0 = 1;
   833  000D5E  808B               	bsf	3979,0,c	;volatile
   834                           
   835                           ;main.c: 121: LATC1=1;
   836  000D60  828B               	bsf	3979,1,c	;volatile
   837                           
   838                           ;main.c: 122: __nop();
   839  000D62  F000               	nop	
   840                           
   841                           ;main.c: 123: LATC1=0;
   842  000D64  928B               	bcf	3979,1,c	;volatile
   843                           
   844                           ;main.c: 124: MSdelay(1);
   845  000D66  0E00               	movlw	0
   846  000D68  6E25               	movwf	MSdelay@val+1,c
   847  000D6A  0E01               	movlw	1
   848  000D6C  6E24               	movwf	MSdelay@val,c
   849  000D6E  EC35  F006         	call	_MSdelay	;wreg free
   850  000D72  0012               	return		;funcret
   851  000D74                     __end_of_LCD_Char:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           intcon	equ	0xFF2
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _LCD_Init *****************
   865 ;; Defined at:
   866 ;;		line 91 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   880 ;;      Params:         0       0       0       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    8
   887 ;; This function calls:
   888 ;;		_LCD_Command
   889 ;;		_MSdelay
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text5
   896  000CD6                     __ptext5:
   897                           	opt stack 0
   898  000CD6                     _LCD_Init:
   899                           	opt stack 22
   900                           
   901                           ;main.c: 93: MSdelay(15);
   902                           
   903                           ;incstack = 0
   904  000CD6  0E00               	movlw	0
   905  000CD8  6E25               	movwf	MSdelay@val+1,c
   906  000CDA  0E0F               	movlw	15
   907  000CDC  6E24               	movwf	MSdelay@val,c
   908  000CDE  EC35  F006         	call	_MSdelay	;wreg free
   909                           
   910                           ;main.c: 94: TRISD = 0x00;
   911  000CE2  0E00               	movlw	0
   912  000CE4  6E95               	movwf	3989,c	;volatile
   913                           
   914                           ;main.c: 95: TRISC = 0x00;
   915  000CE6  0E00               	movlw	0
   916  000CE8  6E94               	movwf	3988,c	;volatile
   917                           
   918                           ;main.c: 96: LCD_Command(0x38);
   919  000CEA  0E38               	movlw	56
   920  000CEC  ECBA  F006         	call	_LCD_Command
   921                           
   922                           ;main.c: 97: LCD_Command(0x01);
   923  000CF0  0E01               	movlw	1
   924  000CF2  ECBA  F006         	call	_LCD_Command
   925                           
   926                           ;main.c: 98: LCD_Command(0x0c);
   927  000CF6  0E0C               	movlw	12
   928  000CF8  ECBA  F006         	call	_LCD_Command
   929                           
   930                           ;main.c: 99: LCD_Command(0x06);
   931  000CFC  0E06               	movlw	6
   932  000CFE  ECBA  F006         	call	_LCD_Command
   933  000D02  0012               	return		;funcret
   934  000D04                     __end_of_LCD_Init:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           intcon	equ	0xFF2
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1l	equ	0xFE1
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _LCD_Clear *****************
   948 ;; Defined at:
   949 ;;		line 102 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    8
   970 ;; This function calls:
   971 ;;		_LCD_Command
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text6
   978  000DE0                     __ptext6:
   979                           	opt stack 0
   980  000DE0                     _LCD_Clear:
   981                           	opt stack 22
   982                           
   983                           ;main.c: 104: LCD_Command(0x01);
   984                           
   985                           ;incstack = 0
   986  000DE0  0E01               	movlw	1
   987  000DE2  ECBA  F006         	call	_LCD_Command
   988  000DE6  0012               	return		;funcret
   989  000DE8                     __end_of_LCD_Clear:
   990                           	opt stack 0
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           intcon	equ	0xFF2
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           postdec1	equ	0xFE5
   999                           fsr1l	equ	0xFE1
  1000                           status	equ	0xFD8
  1001                           
  1002 ;; *************** function _LCD_Command *****************
  1003 ;; Defined at:
  1004 ;;		line 107 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  cmd             1    wreg     unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  cmd             1   41[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    7
  1025 ;; This function calls:
  1026 ;;		_MSdelay
  1027 ;; This function is called by:
  1028 ;;		_LCD_Init
  1029 ;;		_LCD_Clear
  1030 ;;		_LCD_String_xy
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text7
  1035  000D74                     __ptext7:
  1036                           	opt stack 0
  1037  000D74                     _LCD_Command:
  1038                           	opt stack 22
  1039                           
  1040                           ;incstack = 0
  1041                           ;LCD_Command@cmd stored from wreg
  1042  000D74  6E2A               	movwf	LCD_Command@cmd,c
  1043                           
  1044                           ;main.c: 109: LATD= cmd;
  1045  000D76  C02A  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  1046                           
  1047                           ;main.c: 110: LATC0 = 0;
  1048  000D7A  908B               	bcf	3979,0,c	;volatile
  1049                           
  1050                           ;main.c: 111: LATC1 = 1;
  1051  000D7C  828B               	bsf	3979,1,c	;volatile
  1052                           
  1053                           ;main.c: 112: __nop();
  1054  000D7E  F000               	nop	
  1055                           
  1056                           ;main.c: 113: LATC1 = 0;
  1057  000D80  928B               	bcf	3979,1,c	;volatile
  1058                           
  1059                           ;main.c: 114: MSdelay(3);
  1060  000D82  0E00               	movlw	0
  1061  000D84  6E25               	movwf	MSdelay@val+1,c
  1062  000D86  0E03               	movlw	3
  1063  000D88  6E24               	movwf	MSdelay@val,c
  1064  000D8A  EC35  F006         	call	_MSdelay	;wreg free
  1065  000D8E  0012               	return		;funcret
  1066  000D90                     __end_of_LCD_Command:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           intcon	equ	0xFF2
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _MSdelay *****************
  1080 ;; Defined at:
  1081 ;;		line 152 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  val             2   35[COMRAM] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  j               2   39[COMRAM] unsigned int 
  1086 ;;  i               2   37[COMRAM] unsigned int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         2       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1100 ;;Total ram usage:        6 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    6
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_LCD_Init
  1107 ;;		_LCD_Command
  1108 ;;		_LCD_Char
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text8
  1113  000C6A                     __ptext8:
  1114                           	opt stack 0
  1115  000C6A                     _MSdelay:
  1116                           	opt stack 21
  1117                           
  1118                           ;main.c: 154: unsigned int i,j;
  1119                           ;main.c: 155: for(i=0;i<=val;i++)
  1120                           
  1121                           ;incstack = 0
  1122  000C6A  0E00               	movlw	0
  1123  000C6C  6E27               	movwf	MSdelay@i+1,c
  1124  000C6E  0E00               	movlw	0
  1125  000C70  6E26               	movwf	MSdelay@i,c
  1126  000C72  D00F               	goto	l116
  1127  000C74                     
  1128                           ;main.c: 156: for(j=0;j<81;j++);
  1129  000C74  0E00               	movlw	0
  1130  000C76  6E29               	movwf	MSdelay@j+1,c
  1131  000C78  0E00               	movlw	0
  1132  000C7A  6E28               	movwf	MSdelay@j,c
  1133  000C7C                     l1078:
  1134  000C7C  5029               	movf	MSdelay@j+1,w,c
  1135  000C7E  E107               	bnz	l1086
  1136  000C80  0E51               	movlw	81
  1137  000C82  5C28               	subwf	MSdelay@j,w,c
  1138  000C84  B0D8               	btfsc	status,0,c
  1139  000C86  D003               	goto	u210
  1140  000C88  4A28               	infsnz	MSdelay@j,f,c
  1141  000C8A  2A29               	incf	MSdelay@j+1,f,c
  1142  000C8C  D7F7               	goto	l1078
  1143  000C8E                     u210:
  1144  000C8E                     l1086:
  1145  000C8E  4A26               	infsnz	MSdelay@i,f,c
  1146  000C90  2A27               	incf	MSdelay@i+1,f,c
  1147  000C92                     l116:
  1148  000C92  5026               	movf	MSdelay@i,w,c
  1149  000C94  5C24               	subwf	MSdelay@val,w,c
  1150  000C96  5027               	movf	MSdelay@i+1,w,c
  1151  000C98  5825               	subwfb	MSdelay@val+1,w,c
  1152  000C9A  A0D8               	btfss	status,0,c
  1153  000C9C  0012               	return	
  1154  000C9E  D7EA               	goto	l117
  1155  000CA0                     __end_of_MSdelay:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           intcon	equ	0xFF2
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _FOSC *****************
  1169 ;; Defined at:
  1170 ;;		line 84 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		None
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    6
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text9
  1199  000DE8                     __ptext9:
  1200                           	opt stack 0
  1201  000DE8                     _FOSC:
  1202                           	opt stack 24
  1203                           
  1204                           ;main.c: 86: IRCF0 = 1;
  1205                           
  1206                           ;incstack = 0
  1207  000DE8  88D3               	bsf	4051,4,c	;volatile
  1208                           
  1209                           ;main.c: 87: IRCF1 = 1;
  1210  000DEA  8AD3               	bsf	4051,5,c	;volatile
  1211                           
  1212                           ;main.c: 88: IRCF2 = 1;
  1213  000DEC  8CD3               	bsf	4051,6,c	;volatile
  1214  000DEE  0012               	return		;funcret
  1215  000DF0                     __end_of_FOSC:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _ISR *****************
  1229 ;; Defined at:
  1230 ;;		line 30 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1246 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1247 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:       18 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    5
  1251 ;; This function calls:
  1252 ;;		_readBuffer
  1253 ;;		_reset
  1254 ;; This function is called by:
  1255 ;;		Interrupt level 2
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	intcode
  1260  000008                     __pintcode:
  1261                           	opt stack 0
  1262  000008                     _ISR:
  1263                           	opt stack 21
  1264                           
  1265                           ;incstack = 0
  1266  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1267  00000A  ED29  F005         	call	int_func,f	;refresh shadow registers
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           intcon	equ	0xFF2
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           status	equ	0xFD8
  1278                           
  1279                           	psect	intcode_body
  1280  000A52                     __pintcode_body:
  1281                           	opt stack 21
  1282  000A52                     int_func:
  1283                           	opt stack 21
  1284  000A52  0006               	pop		; remove dummy address from shadow register refresh
  1285  000A54  CFFA F012          	movff	pclath,??_ISR
  1286  000A58  CFFB F013          	movff	pclatu,??_ISR+1
  1287  000A5C  CFE9 F014          	movff	fsr0l,??_ISR+2
  1288  000A60  CFEA F015          	movff	fsr0h,??_ISR+3
  1289  000A64  CFE1 F016          	movff	fsr1l,??_ISR+4
  1290  000A68  CFE2 F017          	movff	fsr1h,??_ISR+5
  1291  000A6C  CFD9 F018          	movff	fsr2l,??_ISR+6
  1292  000A70  CFDA F019          	movff	fsr2h,??_ISR+7
  1293  000A74  CFF3 F01A          	movff	prodl,??_ISR+8
  1294  000A78  CFF4 F01B          	movff	prodh,??_ISR+9
  1295  000A7C  CFF6 F01C          	movff	tblptrl,??_ISR+10
  1296  000A80  CFF7 F01D          	movff	tblptrh,??_ISR+11
  1297  000A84  CFF8 F01E          	movff	tblptru,??_ISR+12
  1298  000A88  CFF5 F01F          	movff	tablat,??_ISR+13
  1299  000A8C  C03A  F020         	movff	btemp,??_ISR+14
  1300  000A90  C03B  F021         	movff	btemp+1,??_ISR+15
  1301  000A94  C03C  F022         	movff	btemp+2,??_ISR+16
  1302  000A98  C03D  F023         	movff	btemp+3,??_ISR+17
  1303                           
  1304                           ;main.c: 32: if(RCIF == 1)
  1305  000A9C  AA9E               	btfss	3998,5,c	;volatile
  1306  000A9E  D00F               	goto	i2l75
  1307                           
  1308                           ;main.c: 33: {
  1309                           ;main.c: 34: ++index;
  1310  000AA0  4A34               	infsnz	_index,f,c
  1311  000AA2  2A35               	incf	_index+1,f,c
  1312                           
  1313                           ;main.c: 35: UART_Buffer[index] = RCREG;
  1314  000AA4  0E60               	movlw	low _UART_Buffer
  1315  000AA6  2434               	addwf	_index,w,c
  1316  000AA8  6ED9               	movwf	fsr2l,c
  1317  000AAA  0E00               	movlw	high _UART_Buffer
  1318  000AAC  2035               	addwfc	_index+1,w,c
  1319  000AAE  6EDA               	movwf	fsr2h,c
  1320  000AB0  CFAE FFDF          	movff	4014,indf2	;volatile
  1321                           
  1322                           ;main.c: 36: readBuffer();
  1323  000AB4  EC1E  F004         	call	_readBuffer	;wreg free
  1324                           
  1325                           ;main.c: 37: reset();
  1326  000AB8  ECFF  F006         	call	_reset	;wreg free
  1327                           
  1328                           ;main.c: 38: RCIF = 0;
  1329  000ABC  9A9E               	bcf	3998,5,c	;volatile
  1330  000ABE                     i2l75:
  1331  000ABE  C023  F03D         	movff	??_ISR+17,btemp+3
  1332  000AC2  C022  F03C         	movff	??_ISR+16,btemp+2
  1333  000AC6  C021  F03B         	movff	??_ISR+15,btemp+1
  1334  000ACA  C020  F03A         	movff	??_ISR+14,btemp
  1335  000ACE  C01F  FFF5         	movff	??_ISR+13,tablat
  1336  000AD2  C01E  FFF8         	movff	??_ISR+12,tblptru
  1337  000AD6  C01D  FFF7         	movff	??_ISR+11,tblptrh
  1338  000ADA  C01C  FFF6         	movff	??_ISR+10,tblptrl
  1339  000ADE  C01B  FFF4         	movff	??_ISR+9,prodh
  1340  000AE2  C01A  FFF3         	movff	??_ISR+8,prodl
  1341  000AE6  C019  FFDA         	movff	??_ISR+7,fsr2h
  1342  000AEA  C018  FFD9         	movff	??_ISR+6,fsr2l
  1343  000AEE  C017  FFE2         	movff	??_ISR+5,fsr1h
  1344  000AF2  C016  FFE1         	movff	??_ISR+4,fsr1l
  1345  000AF6  C015  FFEA         	movff	??_ISR+3,fsr0h
  1346  000AFA  C014  FFE9         	movff	??_ISR+2,fsr0l
  1347  000AFE  C013  FFFB         	movff	??_ISR+1,pclatu
  1348  000B02  C012  FFFA         	movff	??_ISR,pclath
  1349  000B06  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1350  000B08  0011               	retfie		f
  1351  000B0A                     __end_of_ISR:
  1352                           	opt stack 0
  1353                           pclatu	equ	0xFFB
  1354                           pclath	equ	0xFFA
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           postinc0	equ	0xFEE
  1363                           fsr0h	equ	0xFEA
  1364                           fsr0l	equ	0xFE9
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1h	equ	0xFE2
  1368                           fsr1l	equ	0xFE1
  1369                           indf2	equ	0xFDF
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _reset *****************
  1375 ;; Defined at:
  1376 ;;		line 264 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		None
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_ISR
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text11
  1404  000DFE                     __ptext11:
  1405                           	opt stack 0
  1406  000DFE                     _reset:
  1407                           	opt stack 25
  1408                           
  1409                           ;main.c: 266: index = -1;
  1410                           
  1411                           ;incstack = 0
  1412  000DFE  6834               	setf	_index,c
  1413  000E00  6835               	setf	_index+1,c
  1414  000E02  0012               	return		;funcret
  1415  000E04                     __end_of_reset:
  1416                           	opt stack 0
  1417                           pclatu	equ	0xFFB
  1418                           pclath	equ	0xFFA
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           prodh	equ	0xFF4
  1424                           prodl	equ	0xFF3
  1425                           intcon	equ	0xFF2
  1426                           postinc0	equ	0xFEE
  1427                           fsr0h	equ	0xFEA
  1428                           fsr0l	equ	0xFE9
  1429                           wreg	equ	0xFE8
  1430                           postdec1	equ	0xFE5
  1431                           fsr1h	equ	0xFE2
  1432                           fsr1l	equ	0xFE1
  1433                           indf2	equ	0xFDF
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _readBuffer *****************
  1439 ;; Defined at:
  1440 ;;		line 159 in file "main.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  i               2   15[COMRAM] int 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    4
  1461 ;; This function calls:
  1462 ;;		_screenFormat
  1463 ;;		i2_LCD_String_xy
  1464 ;; This function is called by:
  1465 ;;		_ISR
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text12
  1470  00083C                     __ptext12:
  1471                           	opt stack 0
  1472  00083C                     _readBuffer:
  1473                           	opt stack 21
  1474                           
  1475                           ;main.c: 161: screenFormat();
  1476                           
  1477                           ;incstack = 0
  1478  00083C  ECB8  F005         	call	_screenFormat	;wreg free
  1479                           
  1480                           ;main.c: 163: for(int i = 0; i <= index; ++i)
  1481  000840  0E00               	movlw	0
  1482  000842  6E11               	movwf	readBuffer@i+1,c
  1483  000844  0E00               	movlw	0
  1484  000846  6E10               	movwf	readBuffer@i,c
  1485  000848  D0F9               	goto	i2l124
  1486  00084A                     
  1487                           ;main.c: 168: ++pos;
  1488  00084A  4A38               	infsnz	_pos,f,c
  1489  00084C  2A39               	incf	_pos+1,f,c
  1490                           
  1491                           ;main.c: 169: LCD_String_xy(row,pos,"1");
  1492  00084E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1493  000852  0E20               	movlw	low STR_3
  1494  000854  6E0B               	movwf	i2LCD_String_xy@msg,c
  1495  000856  0E08               	movlw	high STR_3
  1496  000858  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1497  00085A  5036               	movf	_row,w,c
  1498  00085C  EC19  F006         	call	i2_LCD_String_xy
  1499                           
  1500                           ;main.c: 170: break;
  1501  000860  D0EB               	goto	i2l128
  1502  000862                     
  1503                           ;main.c: 173: ++pos;
  1504  000862  4A38               	infsnz	_pos,f,c
  1505  000864  2A39               	incf	_pos+1,f,c
  1506                           
  1507                           ;main.c: 174: LCD_String_xy(row,pos,"2");
  1508  000866  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1509  00086A  0E22               	movlw	low STR_4
  1510  00086C  6E0B               	movwf	i2LCD_String_xy@msg,c
  1511  00086E  0E08               	movlw	high STR_4
  1512  000870  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1513  000872  5036               	movf	_row,w,c
  1514  000874  EC19  F006         	call	i2_LCD_String_xy
  1515                           
  1516                           ;main.c: 175: break;
  1517  000878  D0DF               	goto	i2l128
  1518  00087A                     
  1519                           ;main.c: 178: ++pos;
  1520  00087A  4A38               	infsnz	_pos,f,c
  1521  00087C  2A39               	incf	_pos+1,f,c
  1522                           
  1523                           ;main.c: 179: LCD_String_xy(row,pos,"3");
  1524  00087E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1525  000882  0E24               	movlw	low STR_5
  1526  000884  6E0B               	movwf	i2LCD_String_xy@msg,c
  1527  000886  0E08               	movlw	high STR_5
  1528  000888  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1529  00088A  5036               	movf	_row,w,c
  1530  00088C  EC19  F006         	call	i2_LCD_String_xy
  1531                           
  1532                           ;main.c: 180: break;
  1533  000890  D0D3               	goto	i2l128
  1534  000892                     
  1535                           ;main.c: 183: ++pos;
  1536  000892  4A38               	infsnz	_pos,f,c
  1537  000894  2A39               	incf	_pos+1,f,c
  1538                           
  1539                           ;main.c: 184: LCD_String_xy(row,pos,"A");
  1540  000896  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1541  00089A  0E32               	movlw	low STR_6
  1542  00089C  6E0B               	movwf	i2LCD_String_xy@msg,c
  1543  00089E  0E08               	movlw	high STR_6
  1544  0008A0  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1545  0008A2  5036               	movf	_row,w,c
  1546  0008A4  EC19  F006         	call	i2_LCD_String_xy
  1547                           
  1548                           ;main.c: 185: break;
  1549  0008A8  D0C7               	goto	i2l128
  1550  0008AA                     
  1551                           ;main.c: 188: ++pos;
  1552  0008AA  4A38               	infsnz	_pos,f,c
  1553  0008AC  2A39               	incf	_pos+1,f,c
  1554                           
  1555                           ;main.c: 189: LCD_String_xy(row,pos,"4");
  1556  0008AE  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1557  0008B2  0E26               	movlw	low STR_7
  1558  0008B4  6E0B               	movwf	i2LCD_String_xy@msg,c
  1559  0008B6  0E08               	movlw	high STR_7
  1560  0008B8  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1561  0008BA  5036               	movf	_row,w,c
  1562  0008BC  EC19  F006         	call	i2_LCD_String_xy
  1563                           
  1564                           ;main.c: 190: break;
  1565  0008C0  D0BB               	goto	i2l128
  1566  0008C2                     
  1567                           ;main.c: 193: ++pos;
  1568  0008C2  4A38               	infsnz	_pos,f,c
  1569  0008C4  2A39               	incf	_pos+1,f,c
  1570                           
  1571                           ;main.c: 194: LCD_String_xy(row,pos,"5");
  1572  0008C6  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1573  0008CA  0E28               	movlw	low STR_8
  1574  0008CC  6E0B               	movwf	i2LCD_String_xy@msg,c
  1575  0008CE  0E08               	movlw	high STR_8
  1576  0008D0  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1577  0008D2  5036               	movf	_row,w,c
  1578  0008D4  EC19  F006         	call	i2_LCD_String_xy
  1579                           
  1580                           ;main.c: 195: break;
  1581  0008D8  D0AF               	goto	i2l128
  1582  0008DA                     
  1583                           ;main.c: 198: ++pos;
  1584  0008DA  4A38               	infsnz	_pos,f,c
  1585  0008DC  2A39               	incf	_pos+1,f,c
  1586                           
  1587                           ;main.c: 199: LCD_String_xy(row,pos,"6");
  1588  0008DE  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1589  0008E2  0E2A               	movlw	low STR_9
  1590  0008E4  6E0B               	movwf	i2LCD_String_xy@msg,c
  1591  0008E6  0E08               	movlw	high STR_9
  1592  0008E8  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1593  0008EA  5036               	movf	_row,w,c
  1594  0008EC  EC19  F006         	call	i2_LCD_String_xy
  1595                           
  1596                           ;main.c: 200: break;
  1597  0008F0  D0A3               	goto	i2l128
  1598  0008F2                     
  1599                           ;main.c: 203: ++pos;
  1600  0008F2  4A38               	infsnz	_pos,f,c
  1601  0008F4  2A39               	incf	_pos+1,f,c
  1602                           
  1603                           ;main.c: 204: LCD_String_xy(row,pos,"B");
  1604  0008F6  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1605  0008FA  0E34               	movlw	low STR_10
  1606  0008FC  6E0B               	movwf	i2LCD_String_xy@msg,c
  1607  0008FE  0E08               	movlw	high STR_10
  1608  000900  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1609  000902  5036               	movf	_row,w,c
  1610  000904  EC19  F006         	call	i2_LCD_String_xy
  1611                           
  1612                           ;main.c: 205: break;
  1613  000908  D097               	goto	i2l128
  1614  00090A                     
  1615                           ;main.c: 208: ++pos;
  1616  00090A  4A38               	infsnz	_pos,f,c
  1617  00090C  2A39               	incf	_pos+1,f,c
  1618                           
  1619                           ;main.c: 209: LCD_String_xy(row,pos,"7");
  1620  00090E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1621  000912  0E2C               	movlw	low STR_11
  1622  000914  6E0B               	movwf	i2LCD_String_xy@msg,c
  1623  000916  0E08               	movlw	high STR_11
  1624  000918  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1625  00091A  5036               	movf	_row,w,c
  1626  00091C  EC19  F006         	call	i2_LCD_String_xy
  1627                           
  1628                           ;main.c: 210: break;
  1629  000920  D08B               	goto	i2l128
  1630  000922                     
  1631                           ;main.c: 213: ++pos;
  1632  000922  4A38               	infsnz	_pos,f,c
  1633  000924  2A39               	incf	_pos+1,f,c
  1634                           
  1635                           ;main.c: 214: LCD_String_xy(row,pos,"8");
  1636  000926  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1637  00092A  0E2E               	movlw	low STR_12
  1638  00092C  6E0B               	movwf	i2LCD_String_xy@msg,c
  1639  00092E  0E08               	movlw	high STR_12
  1640  000930  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1641  000932  5036               	movf	_row,w,c
  1642  000934  EC19  F006         	call	i2_LCD_String_xy
  1643                           
  1644                           ;main.c: 215: break;
  1645  000938  D07F               	goto	i2l128
  1646  00093A                     
  1647                           ;main.c: 218: ++pos;
  1648  00093A  4A38               	infsnz	_pos,f,c
  1649  00093C  2A39               	incf	_pos+1,f,c
  1650                           
  1651                           ;main.c: 219: LCD_String_xy(row,pos,"9");
  1652  00093E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1653  000942  0E30               	movlw	low STR_13
  1654  000944  6E0B               	movwf	i2LCD_String_xy@msg,c
  1655  000946  0E08               	movlw	high STR_13
  1656  000948  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1657  00094A  5036               	movf	_row,w,c
  1658  00094C  EC19  F006         	call	i2_LCD_String_xy
  1659                           
  1660                           ;main.c: 220: break;
  1661  000950  D073               	goto	i2l128
  1662  000952                     
  1663                           ;main.c: 223: ++pos;
  1664  000952  4A38               	infsnz	_pos,f,c
  1665  000954  2A39               	incf	_pos+1,f,c
  1666                           
  1667                           ;main.c: 224: LCD_String_xy(row,pos,"C");
  1668  000956  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1669  00095A  0E36               	movlw	low STR_14
  1670  00095C  6E0B               	movwf	i2LCD_String_xy@msg,c
  1671  00095E  0E08               	movlw	high STR_14
  1672  000960  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1673  000962  5036               	movf	_row,w,c
  1674  000964  EC19  F006         	call	i2_LCD_String_xy
  1675                           
  1676                           ;main.c: 225: break;
  1677  000968  D067               	goto	i2l128
  1678  00096A                     
  1679                           ;main.c: 228: ++pos;
  1680  00096A  4A38               	infsnz	_pos,f,c
  1681  00096C  2A39               	incf	_pos+1,f,c
  1682                           
  1683                           ;main.c: 229: LCD_String_xy(row,pos,"*");
  1684  00096E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1685  000972  0E1C               	movlw	low STR_15
  1686  000974  6E0B               	movwf	i2LCD_String_xy@msg,c
  1687  000976  0E08               	movlw	high STR_15
  1688  000978  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1689  00097A  5036               	movf	_row,w,c
  1690  00097C  EC19  F006         	call	i2_LCD_String_xy
  1691                           
  1692                           ;main.c: 230: break;
  1693  000980  D05B               	goto	i2l128
  1694  000982                     
  1695                           ;main.c: 233: ++pos;
  1696  000982  4A38               	infsnz	_pos,f,c
  1697  000984  2A39               	incf	_pos+1,f,c
  1698                           
  1699                           ;main.c: 234: LCD_String_xy(row,pos,"0");
  1700  000986  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1701  00098A  0E1E               	movlw	low STR_16
  1702  00098C  6E0B               	movwf	i2LCD_String_xy@msg,c
  1703  00098E  0E08               	movlw	high STR_16
  1704  000990  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1705  000992  5036               	movf	_row,w,c
  1706  000994  EC19  F006         	call	i2_LCD_String_xy
  1707                           
  1708                           ;main.c: 235: break;
  1709  000998  D04F               	goto	i2l128
  1710  00099A                     
  1711                           ;main.c: 238: ++pos;
  1712  00099A  4A38               	infsnz	_pos,f,c
  1713  00099C  2A39               	incf	_pos+1,f,c
  1714                           
  1715                           ;main.c: 239: LCD_String_xy(row,pos,"#");
  1716  00099E  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1717  0009A2  0E1A               	movlw	low STR_17
  1718  0009A4  6E0B               	movwf	i2LCD_String_xy@msg,c
  1719  0009A6  0E08               	movlw	high STR_17
  1720  0009A8  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1721  0009AA  5036               	movf	_row,w,c
  1722  0009AC  EC19  F006         	call	i2_LCD_String_xy
  1723                           
  1724                           ;main.c: 240: break;
  1725  0009B0  D043               	goto	i2l128
  1726  0009B2                     
  1727                           ;main.c: 243: ++pos;
  1728  0009B2  4A38               	infsnz	_pos,f,c
  1729  0009B4  2A39               	incf	_pos+1,f,c
  1730                           
  1731                           ;main.c: 244: LCD_String_xy(row,pos,"D");
  1732  0009B6  C038  F00A         	movff	_pos,i2LCD_String_xy@pos
  1733  0009BA  0E38               	movlw	low STR_18
  1734  0009BC  6E0B               	movwf	i2LCD_String_xy@msg,c
  1735  0009BE  0E08               	movlw	high STR_18
  1736  0009C0  6E0C               	movwf	i2LCD_String_xy@msg+1,c
  1737  0009C2  5036               	movf	_row,w,c
  1738  0009C4  EC19  F006         	call	i2_LCD_String_xy
  1739                           
  1740                           ;main.c: 246: }
  1741                           ;main.c: 247: }
  1742                           
  1743                           ;main.c: 245: break;
  1744  0009C8  D037               	goto	i2l128
  1745  0009CA  0E60               	movlw	low _UART_Buffer
  1746  0009CC  2410               	addwf	readBuffer@i,w,c
  1747  0009CE  6ED9               	movwf	fsr2l,c
  1748  0009D0  0E00               	movlw	high _UART_Buffer
  1749  0009D2  2011               	addwfc	readBuffer@i+1,w,c
  1750  0009D4  6EDA               	movwf	fsr2h,c
  1751  0009D6  50DF               	movf	indf2,w,c
  1752                           
  1753                           ; Switch size 1, requested type "space"
  1754                           ; Number of cases is 16, Range of values is 1 to 16
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte           49    25 (average)
  1758                           ;	Chosen strategy is simple_byte
  1759  0009D8  0A01               	xorlw	1	; case 1
  1760  0009DA  B4D8               	btfsc	status,2,c
  1761  0009DC  D736               	goto	i2l127
  1762  0009DE  0A03               	xorlw	3	; case 2
  1763  0009E0  B4D8               	btfsc	status,2,c
  1764  0009E2  D73F               	goto	i2l129
  1765  0009E4  0A01               	xorlw	1	; case 3
  1766  0009E6  B4D8               	btfsc	status,2,c
  1767  0009E8  D748               	goto	i2l130
  1768  0009EA  0A07               	xorlw	7	; case 4
  1769  0009EC  B4D8               	btfsc	status,2,c
  1770  0009EE  D751               	goto	i2l131
  1771  0009F0  0A01               	xorlw	1	; case 5
  1772  0009F2  B4D8               	btfsc	status,2,c
  1773  0009F4  D75A               	goto	i2l132
  1774  0009F6  0A03               	xorlw	3	; case 6
  1775  0009F8  B4D8               	btfsc	status,2,c
  1776  0009FA  D763               	goto	i2l133
  1777  0009FC  0A01               	xorlw	1	; case 7
  1778  0009FE  B4D8               	btfsc	status,2,c
  1779  000A00  D76C               	goto	i2l134
  1780  000A02  0A0F               	xorlw	15	; case 8
  1781  000A04  B4D8               	btfsc	status,2,c
  1782  000A06  D775               	goto	i2l135
  1783  000A08  0A01               	xorlw	1	; case 9
  1784  000A0A  B4D8               	btfsc	status,2,c
  1785  000A0C  D77E               	goto	i2l136
  1786  000A0E  0A03               	xorlw	3	; case 10
  1787  000A10  B4D8               	btfsc	status,2,c
  1788  000A12  D787               	goto	i2l137
  1789  000A14  0A01               	xorlw	1	; case 11
  1790  000A16  B4D8               	btfsc	status,2,c
  1791  000A18  D790               	goto	i2l138
  1792  000A1A  0A07               	xorlw	7	; case 12
  1793  000A1C  B4D8               	btfsc	status,2,c
  1794  000A1E  D799               	goto	i2l139
  1795  000A20  0A01               	xorlw	1	; case 13
  1796  000A22  B4D8               	btfsc	status,2,c
  1797  000A24  D7A2               	goto	i2l140
  1798  000A26  0A03               	xorlw	3	; case 14
  1799  000A28  B4D8               	btfsc	status,2,c
  1800  000A2A  D7AB               	goto	i2l141
  1801  000A2C  0A01               	xorlw	1	; case 15
  1802  000A2E  B4D8               	btfsc	status,2,c
  1803  000A30  D7B4               	goto	i2l142
  1804  000A32  0A1F               	xorlw	31	; case 16
  1805  000A34  B4D8               	btfsc	status,2,c
  1806  000A36  D7BD               	goto	i2l143
  1807  000A38                     i2l128:
  1808  000A38  4A10               	infsnz	readBuffer@i,f,c
  1809  000A3A  2A11               	incf	readBuffer@i+1,f,c
  1810  000A3C                     i2l124:
  1811  000A3C  5010               	movf	readBuffer@i,w,c
  1812  000A3E  5C34               	subwf	_index,w,c
  1813  000A40  5035               	movf	_index+1,w,c
  1814  000A42  0A80               	xorlw	128
  1815  000A44  6E0F               	movwf	??_readBuffer& (0+255),c
  1816  000A46  5011               	movf	readBuffer@i+1,w,c
  1817  000A48  0A80               	xorlw	128
  1818  000A4A  580F               	subwfb	??_readBuffer& (0+255),w,c
  1819  000A4C  A0D8               	btfss	status,0,c
  1820  000A4E  0012               	return	
  1821  000A50  D7BC               	goto	i2l126
  1822  000A52                     __end_of_readBuffer:
  1823                           	opt stack 0
  1824                           pclatu	equ	0xFFB
  1825                           pclath	equ	0xFFA
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           fsr0h	equ	0xFEA
  1835                           fsr0l	equ	0xFE9
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1h	equ	0xFE2
  1839                           fsr1l	equ	0xFE1
  1840                           indf2	equ	0xFDF
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function i2_LCD_String_xy *****************
  1846 ;; Defined at:
  1847 ;;		line 136 in file "main.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  row             1    wreg     unsigned char 
  1850 ;;  pos             1    9[COMRAM] unsigned char 
  1851 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  1852 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  1853 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  1854 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1855 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1856 ;;		 -> STR_2(9), STR_1(16), 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  row             1   12[COMRAM] unsigned char 
  1859 ;;  LCD_String_x    1   13[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         3       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        5 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		i2_LCD_Command
  1878 ;;		i2_LCD_String
  1879 ;; This function is called by:
  1880 ;;		_readBuffer
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text13
  1885  000C32                     __ptext13:
  1886                           	opt stack 0
  1887  000C32                     i2_LCD_String_xy:
  1888                           	opt stack 21
  1889                           
  1890                           ;incstack = 0
  1891                           ;i2LCD_String_xy@row stored from wreg
  1892  000C32  6E0D               	movwf	i2LCD_String_xy@row,c
  1893                           
  1894                           ;main.c: 138: char location=0;
  1895  000C34  0E00               	movlw	0
  1896  000C36  6E0E               	movwf	i2LCD_String_xy@location,c
  1897                           
  1898                           ;main.c: 139: if(row<=1)
  1899  000C38  0E02               	movlw	2
  1900  000C3A  600D               	cpfslt	i2LCD_String_xy@row,c
  1901  000C3C  D008               	goto	i2l111
  1902                           
  1903                           ;main.c: 140: {
  1904                           ;main.c: 141: location=(0x80) | ((pos) & 0x0f);
  1905  000C3E  500A               	movf	i2LCD_String_xy@pos,w,c
  1906  000C40  0B0F               	andlw	15
  1907  000C42  0980               	iorlw	128
  1908  000C44  6E0E               	movwf	i2LCD_String_xy@location,c
  1909                           
  1910                           ;main.c: 142: LCD_Command(location);
  1911  000C46  500E               	movf	i2LCD_String_xy@location,w,c
  1912  000C48  ECD6  F006         	call	i2_LCD_Command
  1913                           
  1914                           ;main.c: 143: }
  1915  000C4C  D007               	goto	i2l112
  1916  000C4E                     i2l111:
  1917                           
  1918                           ;main.c: 144: else
  1919                           ;main.c: 145: {
  1920                           ;main.c: 146: location=(0xC0) | ((pos) & 0x0f);
  1921  000C4E  500A               	movf	i2LCD_String_xy@pos,w,c
  1922  000C50  0B0F               	andlw	15
  1923  000C52  09C0               	iorlw	192
  1924  000C54  6E0E               	movwf	i2LCD_String_xy@location,c
  1925                           
  1926                           ;main.c: 147: LCD_Command(location);
  1927  000C56  500E               	movf	i2LCD_String_xy@location,w,c
  1928  000C58  ECD6  F006         	call	i2_LCD_Command
  1929  000C5C                     i2l112:
  1930                           
  1931                           ;main.c: 148: }
  1932                           ;main.c: 149: LCD_String(msg);
  1933  000C5C  C00B  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  1934  000C60  C00C  F009         	movff	i2LCD_String_xy@msg+1,i2LCD_String@msg+1
  1935  000C64  EC97  F006         	call	i2_LCD_String	;wreg free
  1936  000C68  0012               	return		;funcret
  1937  000C6A                     __end_ofi2_LCD_String_xy:
  1938                           	opt stack 0
  1939                           pclatu	equ	0xFFB
  1940                           pclath	equ	0xFFA
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           intcon	equ	0xFF2
  1948                           postinc0	equ	0xFEE
  1949                           fsr0h	equ	0xFEA
  1950                           fsr0l	equ	0xFE9
  1951                           wreg	equ	0xFE8
  1952                           postdec1	equ	0xFE5
  1953                           fsr1h	equ	0xFE2
  1954                           fsr1l	equ	0xFE1
  1955                           indf2	equ	0xFDF
  1956                           fsr2h	equ	0xFDA
  1957                           fsr2l	equ	0xFD9
  1958                           status	equ	0xFD8
  1959                           
  1960 ;; *************** function i2_LCD_String *****************
  1961 ;; Defined at:
  1962 ;;		line 127 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  1965 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  1966 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  1967 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1968 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1969 ;;		 -> STR_2(9), STR_1(16), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         2       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        2 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    2
  1988 ;; This function calls:
  1989 ;;		i2_LCD_Char
  1990 ;; This function is called by:
  1991 ;;		i2_LCD_String_xy
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text14
  1996  000D2E                     __ptext14:
  1997                           	opt stack 0
  1998  000D2E                     i2_LCD_String:
  1999                           	opt stack 21
  2000                           
  2001                           ;main.c: 129: while((*msg)!=0)
  2002                           
  2003                           ;incstack = 0
  2004  000D2E  D00A               	goto	i2l105
  2005  000D30                     
  2006                           ;main.c: 130: {
  2007                           ;main.c: 131: LCD_Char(*msg);
  2008  000D30  C008  FFF6         	movff	i2LCD_String@msg,tblptrl
  2009  000D34  C009  FFF7         	movff	i2LCD_String@msg+1,tblptrh
  2010  000D38                     	if	0	;tblptru may be non-zero
  2011  000D38                     	endif
  2012  000D38                     	if	0	;tblptru may be non-zero
  2013  000D38                     	endif
  2014  000D38  0008               	tblrd		*
  2015  000D3A  50F5               	movf	tablat,w,c
  2016  000D3C  ECC8  F006         	call	i2_LCD_Char
  2017                           
  2018                           ;main.c: 132: msg++;
  2019  000D40  4A08               	infsnz	i2LCD_String@msg,f,c
  2020  000D42  2A09               	incf	i2LCD_String@msg+1,f,c
  2021  000D44                     i2l105:
  2022  000D44  C008  FFF6         	movff	i2LCD_String@msg,tblptrl
  2023  000D48  C009  FFF7         	movff	i2LCD_String@msg+1,tblptrh
  2024  000D4C                     	if	0	;tblptru may be non-zero
  2025  000D4C                     	endif
  2026  000D4C                     	if	0	;tblptru may be non-zero
  2027  000D4C                     	endif
  2028  000D4C  0008               	tblrd		*
  2029  000D4E  50F5               	movf	tablat,w,c
  2030  000D50  0900               	iorlw	0
  2031  000D52  B4D8               	btfsc	status,2,c
  2032  000D54  0012               	return	
  2033  000D56  D7EC               	goto	i2l106
  2034  000D58                     __end_ofi2_LCD_String:
  2035                           	opt stack 0
  2036                           pclatu	equ	0xFFB
  2037                           pclath	equ	0xFFA
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           prodh	equ	0xFF4
  2043                           prodl	equ	0xFF3
  2044                           intcon	equ	0xFF2
  2045                           postinc0	equ	0xFEE
  2046                           fsr0h	equ	0xFEA
  2047                           fsr0l	equ	0xFE9
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function i2_LCD_Char *****************
  2058 ;; Defined at:
  2059 ;;		line 117 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  dat             1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  dat             1    6[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    1
  2080 ;; This function calls:
  2081 ;;		i2_MSdelay
  2082 ;; This function is called by:
  2083 ;;		i2_LCD_String
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text15
  2088  000D90                     __ptext15:
  2089                           	opt stack 0
  2090  000D90                     i2_LCD_Char:
  2091                           	opt stack 21
  2092                           
  2093                           ;incstack = 0
  2094                           ;i2LCD_Char@dat stored from wreg
  2095  000D90  6E07               	movwf	i2LCD_Char@dat,c
  2096                           
  2097                           ;main.c: 119: LATD= dat;
  2098  000D92  C007  FF8C         	movff	i2LCD_Char@dat,3980	;volatile
  2099                           
  2100                           ;main.c: 120: LATC0 = 1;
  2101  000D96  808B               	bsf	3979,0,c	;volatile
  2102                           
  2103                           ;main.c: 121: LATC1=1;
  2104  000D98  828B               	bsf	3979,1,c	;volatile
  2105                           
  2106                           ;main.c: 122: __nop();
  2107  000D9A  F000               	nop	
  2108                           
  2109                           ;main.c: 123: LATC1=0;
  2110  000D9C  928B               	bcf	3979,1,c	;volatile
  2111                           
  2112                           ;main.c: 124: MSdelay(1);
  2113  000D9E  0E00               	movlw	0
  2114  000DA0  6E02               	movwf	i2MSdelay@val+1,c
  2115  000DA2  0E01               	movlw	1
  2116  000DA4  6E01               	movwf	i2MSdelay@val,c
  2117  000DA6  EC50  F006         	call	i2_MSdelay	;wreg free
  2118  000DAA  0012               	return		;funcret
  2119  000DAC                     __end_ofi2_LCD_Char:
  2120                           	opt stack 0
  2121                           pclatu	equ	0xFFB
  2122                           pclath	equ	0xFFA
  2123                           tblptru	equ	0xFF8
  2124                           tblptrh	equ	0xFF7
  2125                           tblptrl	equ	0xFF6
  2126                           tablat	equ	0xFF5
  2127                           prodh	equ	0xFF4
  2128                           prodl	equ	0xFF3
  2129                           intcon	equ	0xFF2
  2130                           postinc0	equ	0xFEE
  2131                           fsr0h	equ	0xFEA
  2132                           fsr0l	equ	0xFE9
  2133                           wreg	equ	0xFE8
  2134                           postdec1	equ	0xFE5
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           indf2	equ	0xFDF
  2138                           fsr2h	equ	0xFDA
  2139                           fsr2l	equ	0xFD9
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _screenFormat *****************
  2143 ;; Defined at:
  2144 ;;		line 251 in file "main.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    3
  2165 ;; This function calls:
  2166 ;;		i2_LCD_Clear
  2167 ;; This function is called by:
  2168 ;;		_readBuffer
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text16
  2173  000B70                     __ptext16:
  2174                           	opt stack 0
  2175  000B70                     _screenFormat:
  2176                           	opt stack 21
  2177                           
  2178                           ;main.c: 253: if(row == 1 && pos >= 15)
  2179                           
  2180                           ;incstack = 0
  2181  000B70  0436               	decf	_row,w,c
  2182  000B72  1037               	iorwf	_row+1,w,c
  2183  000B74  B4D8               	btfsc	status,2,c
  2184  000B76  BE39               	btfsc	_pos+1,7,c
  2185  000B78  D00D               	goto	i2l148
  2186  000B7A  5039               	movf	_pos+1,w,c
  2187  000B7C  E104               	bnz	i2u26_40
  2188  000B7E  0E0F               	movlw	15
  2189  000B80  5C38               	subwf	_pos,w,c
  2190  000B82  A0D8               	btfss	status,0,c
  2191  000B84  D007               	goto	i2l148
  2192  000B86                     i2u26_40:
  2193                           
  2194                           ;main.c: 254: {
  2195                           ;main.c: 255: row = 3; pos = -1;
  2196  000B86  0E00               	movlw	0
  2197  000B88  6E37               	movwf	_row+1,c
  2198  000B8A  0E03               	movlw	3
  2199  000B8C  6E36               	movwf	_row,c
  2200  000B8E  6838               	setf	_pos,c
  2201  000B90  6839               	setf	_pos+1,c
  2202                           
  2203                           ;main.c: 256: }
  2204  000B92  0012               	return	
  2205  000B94                     i2l148:
  2206                           
  2207                           ;main.c: 257: else if(row == 2 && pos > 15)
  2208  000B94  0E02               	movlw	2
  2209  000B96  1836               	xorwf	_row,w,c
  2210  000B98  1037               	iorwf	_row+1,w,c
  2211  000B9A  A4D8               	btfss	status,2,c
  2212  000B9C  0012               	return	
  2213  000B9E  BE39               	btfsc	_pos+1,7,c
  2214  000BA0  0012               	return	
  2215  000BA2  5039               	movf	_pos+1,w,c
  2216  000BA4  E104               	bnz	i2u28_40
  2217  000BA6  0E10               	movlw	16
  2218  000BA8  5C38               	subwf	_pos,w,c
  2219  000BAA  A0D8               	btfss	status,0,c
  2220  000BAC  0012               	return	
  2221  000BAE                     i2u28_40:
  2222                           
  2223                           ;main.c: 258: {
  2224                           ;main.c: 259: row = 1; pos = -1;
  2225  000BAE  0E00               	movlw	0
  2226  000BB0  6E37               	movwf	_row+1,c
  2227  000BB2  0E01               	movlw	1
  2228  000BB4  6E36               	movwf	_row,c
  2229  000BB6  6838               	setf	_pos,c
  2230  000BB8  6839               	setf	_pos+1,c
  2231                           
  2232                           ;main.c: 260: LCD_Clear();
  2233  000BBA  ECF8  F006         	call	i2_LCD_Clear	;wreg free
  2234  000BBE  0012               	return	
  2235  000BC0                     __end_of_screenFormat:
  2236                           	opt stack 0
  2237                           pclatu	equ	0xFFB
  2238                           pclath	equ	0xFFA
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           intcon	equ	0xFF2
  2246                           postinc0	equ	0xFEE
  2247                           fsr0h	equ	0xFEA
  2248                           fsr0l	equ	0xFE9
  2249                           wreg	equ	0xFE8
  2250                           postdec1	equ	0xFE5
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function i2_LCD_Clear *****************
  2259 ;; Defined at:
  2260 ;;		line 102 in file "main.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		i2_LCD_Command
  2283 ;; This function is called by:
  2284 ;;		_screenFormat
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text17
  2289  000DF0                     __ptext17:
  2290                           	opt stack 0
  2291  000DF0                     i2_LCD_Clear:
  2292                           	opt stack 21
  2293                           
  2294                           ;main.c: 104: LCD_Command(0x01);
  2295                           
  2296                           ;incstack = 0
  2297  000DF0  0E01               	movlw	1
  2298  000DF2  ECD6  F006         	call	i2_LCD_Command
  2299  000DF6  0012               	return		;funcret
  2300  000DF8                     __end_ofi2_LCD_Clear:
  2301                           	opt stack 0
  2302                           pclatu	equ	0xFFB
  2303                           pclath	equ	0xFFA
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           postinc0	equ	0xFEE
  2312                           fsr0h	equ	0xFEA
  2313                           fsr0l	equ	0xFE9
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           indf2	equ	0xFDF
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function i2_LCD_Command *****************
  2324 ;; Defined at:
  2325 ;;		line 107 in file "main.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  cmd             1    wreg     unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  cmd             1    6[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		i2_MSdelay
  2348 ;; This function is called by:
  2349 ;;		i2_LCD_Clear
  2350 ;;		i2_LCD_String_xy
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text18
  2355  000DAC                     __ptext18:
  2356                           	opt stack 0
  2357  000DAC                     i2_LCD_Command:
  2358                           	opt stack 22
  2359                           
  2360                           ;incstack = 0
  2361                           ;i2LCD_Command@cmd stored from wreg
  2362  000DAC  6E07               	movwf	i2LCD_Command@cmd,c
  2363                           
  2364                           ;main.c: 109: LATD= cmd;
  2365  000DAE  C007  FF8C         	movff	i2LCD_Command@cmd,3980	;volatile
  2366                           
  2367                           ;main.c: 110: LATC0 = 0;
  2368  000DB2  908B               	bcf	3979,0,c	;volatile
  2369                           
  2370                           ;main.c: 111: LATC1 = 1;
  2371  000DB4  828B               	bsf	3979,1,c	;volatile
  2372                           
  2373                           ;main.c: 112: __nop();
  2374  000DB6  F000               	nop	
  2375                           
  2376                           ;main.c: 113: LATC1 = 0;
  2377  000DB8  928B               	bcf	3979,1,c	;volatile
  2378                           
  2379                           ;main.c: 114: MSdelay(3);
  2380  000DBA  0E00               	movlw	0
  2381  000DBC  6E02               	movwf	i2MSdelay@val+1,c
  2382  000DBE  0E03               	movlw	3
  2383  000DC0  6E01               	movwf	i2MSdelay@val,c
  2384  000DC2  EC50  F006         	call	i2_MSdelay	;wreg free
  2385  000DC6  0012               	return		;funcret
  2386  000DC8                     __end_ofi2_LCD_Command:
  2387                           	opt stack 0
  2388                           pclatu	equ	0xFFB
  2389                           pclath	equ	0xFFA
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           intcon	equ	0xFF2
  2397                           postinc0	equ	0xFEE
  2398                           fsr0h	equ	0xFEA
  2399                           fsr0l	equ	0xFE9
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function i2_MSdelay *****************
  2410 ;; Defined at:
  2411 ;;		line 152 in file "main.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  val             2    0[COMRAM] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  MSdelay         2    4[COMRAM] unsigned int 
  2416 ;;  MSdelay         2    2[COMRAM] unsigned int 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         2       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        6 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		i2_LCD_Command
  2436 ;;		i2_LCD_Char
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text19
  2441  000CA0                     __ptext19:
  2442                           	opt stack 0
  2443  000CA0                     i2_MSdelay:
  2444                           	opt stack 21
  2445                           
  2446                           ;main.c: 154: unsigned int i,j;
  2447                           ;main.c: 155: for(i=0;i<=val;i++)
  2448                           
  2449                           ;incstack = 0
  2450  000CA0  0E00               	movlw	0
  2451  000CA2  6E04               	movwf	i2MSdelay@i+1,c
  2452  000CA4  0E00               	movlw	0
  2453  000CA6  6E03               	movwf	i2MSdelay@i,c
  2454  000CA8  D00F               	goto	i2l116
  2455  000CAA                     
  2456                           ;main.c: 156: for(j=0;j<81;j++);
  2457  000CAA  0E00               	movlw	0
  2458  000CAC  6E06               	movwf	i2MSdelay@j+1,c
  2459  000CAE  0E00               	movlw	0
  2460  000CB0  6E05               	movwf	i2MSdelay@j,c
  2461  000CB2                     i2l1062:
  2462  000CB2  5006               	movf	i2MSdelay@j+1,w,c
  2463  000CB4  E107               	bnz	i2l1070
  2464  000CB6  0E51               	movlw	81
  2465  000CB8  5C05               	subwf	i2MSdelay@j,w,c
  2466  000CBA  B0D8               	btfsc	status,0,c
  2467  000CBC  D003               	goto	i2u18_40
  2468  000CBE  4A05               	infsnz	i2MSdelay@j,f,c
  2469  000CC0  2A06               	incf	i2MSdelay@j+1,f,c
  2470  000CC2  D7F7               	goto	i2l1062
  2471  000CC4                     i2u18_40:
  2472  000CC4                     i2l1070:
  2473  000CC4  4A03               	infsnz	i2MSdelay@i,f,c
  2474  000CC6  2A04               	incf	i2MSdelay@i+1,f,c
  2475  000CC8                     i2l116:
  2476  000CC8  5003               	movf	i2MSdelay@i,w,c
  2477  000CCA  5C01               	subwf	i2MSdelay@val,w,c
  2478  000CCC  5004               	movf	i2MSdelay@i+1,w,c
  2479  000CCE  5802               	subwfb	i2MSdelay@val+1,w,c
  2480  000CD0  A0D8               	btfss	status,0,c
  2481  000CD2  0012               	return	
  2482  000CD4  D7EA               	goto	i2l117
  2483  000CD6                     __end_ofi2_MSdelay:
  2484                           	opt stack 0
  2485                           pclatu	equ	0xFFB
  2486                           pclath	equ	0xFFA
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           fsr0h	equ	0xFEA
  2496                           fsr0l	equ	0xFE9
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           indf2	equ	0xFDF
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           pclatu	equ	0xFFB
  2506                           pclath	equ	0xFFA
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           intcon	equ	0xFF2
  2514                           postinc0	equ	0xFEE
  2515                           fsr0h	equ	0xFEA
  2516                           fsr0l	equ	0xFE9
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1h	equ	0xFE2
  2520                           fsr1l	equ	0xFE1
  2521                           indf2	equ	0xFDF
  2522                           fsr2h	equ	0xFDA
  2523                           fsr2l	equ	0xFD9
  2524                           status	equ	0xFD8
  2525                           
  2526                           	psect	rparam
  2527  0000                     pclatu	equ	0xFFB
  2528                           pclath	equ	0xFFA
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           intcon	equ	0xFF2
  2536                           postinc0	equ	0xFEE
  2537                           fsr0h	equ	0xFEA
  2538                           fsr0l	equ	0xFE9
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           indf2	equ	0xFDF
  2544                           fsr2h	equ	0xFDA
  2545                           fsr2l	equ	0xFD9
  2546                           status	equ	0xFD8
  2547                           
  2548                           	psect	temp
  2549  00003A                     btemp:
  2550                           	opt stack 0
  2551  00003A                     	ds	1
  2552  0000                     int$flags	set	btemp
  2553  0000                     wtemp6	set	btemp+1
  2554                           pclatu	equ	0xFFB
  2555                           pclath	equ	0xFFA
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           intcon	equ	0xFF2
  2563                           postinc0	equ	0xFEE
  2564                           fsr0h	equ	0xFEA
  2565                           fsr0l	equ	0xFE9
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1h	equ	0xFE2
  2569                           fsr1l	equ	0xFE1
  2570                           indf2	equ	0xFDF
  2571                           fsr2h	equ	0xFDA
  2572                           fsr2l	equ	0xFD9
  2573                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    0
    Data        6
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      57
    BANK0           160      0     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _ISR in COMRAM

    _ISR->_readBuffer
    _readBuffer->i2_LCD_String_xy
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    i2_LCD_Clear->i2_LCD_Command
    i2_LCD_Command->i2_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3848
                                             49 COMRAM     2     2      0
                               _FOSC
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                        _initUART_rx
 ---------------------------------------------------------------------------------
 (1) _initUART_rx                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2844
                                             44 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     463
                                             42 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     342
                                             41 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     342
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     342
                                             41 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     320
                                             35 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _FOSC                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 18    18      0    1582
                                             17 COMRAM    18    18      0
                         _readBuffer
                              _reset
 ---------------------------------------------------------------------------------
 (6) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _readBuffer                                           3     3      0    1582
                                             14 COMRAM     3     3      0
                       _screenFormat
                    i2_LCD_String_xy
 ---------------------------------------------------------------------------------
 (7) i2_LCD_String_xy                                      5     2      3    1370
                                              9 COMRAM     5     2      3
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (8) i2_LCD_String                                         2     0      2     237
                                              7 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Char                                           1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) _screenFormat                                         0     0      0     166
                        i2_LCD_Clear
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Clear                                          0     0      0     166
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Command                                        1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (10) i2_MSdelay                                           6     4      2     144
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FOSC
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _initUART_rx

 _ISR (ROOT)
   _readBuffer
     _screenFormat
       i2_LCD_Clear
         i2_LCD_Command
           i2_MSdelay
     i2_LCD_String_xy
       i2_LCD_Command
         i2_MSdelay
       i2_LCD_String
         i2_LCD_Char
           i2_MSdelay
   _reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      39       1       60.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      20        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 31 15:06:07 2018

            ?_LCD_Command 0001                        l81 0B6E               __CFG_BORV$3 000000  
             ?_LCD_String 002B              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000  
                     l111 0C16                       l112 0C24                       l105 0D1A  
                     l106 0D06                       l116 0C92                       l117 0C74  
                     _GIE 007F97              __CFG_CPB$OFF 000000                       u210 0C8E  
                     u337 0B32              __CFG_CPD$OFF 000000                       u347 0B5E  
                     _ISR 0008              __CFG_BOR$OFF 000000                       _pos 0038  
                     _row 0036                       wreg 000FE8                      ?_ISR 0001  
             LCD_Char@dat 002A              __CFG_WDT$OFF 000000                      l1086 0C8E  
                    l1078 0C7C                      STR_1 0801                      STR_2 0811  
                    STR_3 0820                      STR_4 0822                      STR_5 0824  
                    STR_6 0832                      STR_7 0826                      STR_8 0828  
                    STR_9 082A                      _BRGH 007D62                      _CREN 007D5C  
                    _LATD 000F8C                      _FOSC 0DE8                      _PEIE 007F96  
                    _RCIE 007CED                      _RCIF 007CF5                      i2l75 0ABE  
                    _SPEN 007D5F                      _SYNC 007D64               ?i2_LCD_Char 0001  
            ?_initUART_rx 0001                      _main 0B0A        __size_of_LCD_Clear 0008  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr2h 000FDA  
                    fsr0l 000FE9                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 003A                      prodh 000FF4  
                    prodl 000FF3                      start 000E           __end_of_MSdelay 0CA0  
           __CFG_IESO$OFF 000000             _LCD_String_xy 0BFA              ___param_bank 000000  
                   ??_ISR 0012          __end_of_LCD_Char 0D74                     ?_FOSC 0001  
        __end_of_LCD_Init 0D04             __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000  
                   ?_main 0001                     STR_10 0834                     STR_11 082C  
                   STR_12 082E                     STR_13 0830                     STR_14 0836  
                   STR_15 081C                     STR_16 081E                     STR_17 081A  
                   STR_18 0838  __size_ofi2_LCD_String_xy 0038                     _LATC0 007C58  
                   _LATC1 007C59                     _IRCF0 007E9C                     _IRCF1 007E9D  
                   _IRCF2 007E9E                     i2l111 0C4E                     i2l112 0C5C  
                   i2l105 0D44                     i2l106 0D30                     i2l130 087A  
                   i2l131 0892                     i2l116 0CC8                     i2l124 0A3C  
                   i2l140 096A                     i2l132 08AA                     i2l117 0CAA  
                   i2l141 0982                     i2l133 08C2                     i2l126 09CA  
                   i2l142 099A                     i2l134 08DA                     i2l143 09B2  
                   i2l135 08F2                     i2l127 084A                     i2l128 0A38  
                   i2l136 090A                     i2l137 0922                     i2l129 0862  
                   i2l138 093A                     i2l139 0952                     i2l148 0B94  
                   _RCREG 000FAE                     _SPBRG 000FAF             __CFG_USBDIV$1 000000  
                   _TRISC 000F94                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000        __size_ofi2_MSdelay 0036            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
            ?i2_LCD_Clear 0001             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _index 0034                     _reset 0DFE                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 003B  
     __size_of_LCD_String 002A            __CFG_ICPRT$OFF 000000            ?_LCD_String_xy 002D  
            __end_of_FOSC 0DF0            __CFG_MCLRE$OFF 000000           __initialization 0BC0  
            __end_of_main 0B70                    ??_FOSC 0024                    ??_main 0032  
     __size_ofi2_LCD_Char 001C         __end_of_LCD_Clear 0DE8             __activetblptr 000002  
                  ?_reset 0001          LCD_String_xy@msg 002E          LCD_String_xy@pos 002D  
        LCD_String_xy@row 0030                    i2l1070 0CC4                    i2l1062 0CB2  
               ??_MSdelay 0026               readBuffer@i 0010            __CFG_XINST$OFF 000000  
       __end_ofi2_MSdelay 0CD6            __CFG_STVREN$ON 000000                    clear_0 0BE6  
           ?i2_LCD_String 0008      __size_of_LCD_Command 001C              __pdataCOMRAM 0034  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8         ??i2_LCD_String_xy 000D                 ?_LCD_Char 0001  
  __size_ofi2_LCD_Command 001C                __accesstop 0060   __end_of__initialization 0BEC  
               ?_LCD_Init 0001           __CFG_PBADEN$OFF 000000           ??_LCD_String_xy 0030  
           ___rparam_used 000001      __size_of_initUART_rx 0018            __pcstackCOMRAM 0001  
           __end_of_reset 0E04            ??i2_LCD_String 000A              ??_LCD_String 002D  
        i2LCD_Command@cmd 0007                   ??_reset 0001      __size_ofi2_LCD_Clear 0008  
              __pbssBANK0 0060              ??i2_LCD_Char 0007                ??_LCD_Char 002A  
              ??_LCD_Init 002B        __end_of_LCD_String 0D2E             i2_LCD_Command 0DAC  
           ?_screenFormat 0001        __end_ofi2_LCD_Char 0DAC                   i2u18_40 0CC4  
                 i2u26_40 0B86                   i2u28_40 0BAE                   _MSdelay 0C6A  
         __CFG_VREGEN$OFF 000000             LCD_String@msg 002B                   __Hparam 0000  
                 __Lparam 0000                _readBuffer 083C              __psmallconst 0800  
          ?i2_LCD_Command 0001            ??_screenFormat 0008                   __pcinit 0BC0  
                 __ramtop 0800                   __ptext0 0B0A                   __ptext1 0DC8  
                 __ptext2 0BFA                   __ptext3 0D04                   __ptext4 0D58  
                 __ptext5 0CD6                   __ptext6 0DE0                   __ptext7 0D74  
                 __ptext8 0C6A                   __ptext9 0DE8              __size_of_ISR 0B02  
               _LCD_Clear 0DE0            __pintcode_body 0A52      end_of_initialization 0BEC  
    __end_ofi2_LCD_String 0D58            LCD_Command@cmd 002A             __Lmediumconst 0000  
                 int_func 0A52                   postdec1 000FE5                   postinc0 000FEE  
               i2_MSdelay 0CA0           i2_LCD_String_xy 0C32                 _TRISCbits 000F94  
              ?_LCD_Clear 0001         __size_of_LCD_Char 001C         __size_of_LCD_Init 002E  
      i2LCD_String_xy@msg 000B        i2LCD_String_xy@pos 000A        i2LCD_String_xy@row 000D  
             ?_readBuffer 0001           ??i2_LCD_Command 0007             ??_LCD_Command 002A  
              ?i2_MSdelay 0001             __pidataCOMRAM 0DF8       start_initialization 0BC0  
             __end_of_ISR 0B0A             ??_initUART_rx 0024      __end_of_screenFormat 0BC0  
   __end_of_LCD_String_xy 0C32   __end_ofi2_LCD_String_xy 0C6A          __CFG_LPT1OSC$OFF 000000  
     __end_of_LCD_Command 0D90             ??i2_LCD_Clear 0008               ??_LCD_Clear 002B  
   __size_ofi2_LCD_String 002A       __size_of_readBuffer 0216             i2LCD_Char@dat 0007  
                ?_MSdelay 0024              i2MSdelay@val 0001       __end_of_initUART_rx 0DE0  
               __pintcode 0008               ??i2_MSdelay 0003              i2_LCD_String 0D2E  
             __smallconst 0800     LCD_String_xy@location 0031            __size_of_reset 0006  
                MSdelay@i 0026                  MSdelay@j 0028                  _LCD_Char 0D58  
     __end_ofi2_LCD_Clear 0DF8                  _LCD_Init 0CD6          ?i2_LCD_String_xy 000A  
        __CFG_WDTPS$32768 000000               _LCD_Command 0D74     __size_of_screenFormat 0050  
               copy_data0 0BD4          __size_of_MSdelay 0036               _initUART_rx 0DC8  
                __Hrparam 0000                  __Lrparam 0000              ??_readBuffer 000F  
         i2LCD_String@msg 0008              _screenFormat 0B70     __CFG_FOSC$INTOSCIO_EC 000000  
             i2_LCD_Clear 0DF0                  __ptext11 0DFE                  __ptext12 083C  
                __ptext13 0C32                  __ptext14 0D2E                  __ptext15 0D90  
                __ptext16 0B70                  __ptext17 0DF0                  __ptext18 0DAC  
                __ptext19 0CA0        __end_of_readBuffer 0A52             __size_of_FOSC 0008  
           __size_of_main 0066                MSdelay@val 0024                  int$flags 003A  
   __end_ofi2_LCD_Command 0DC8                _LCD_String 0D04     __CFG_CPUDIV$OSC1_PLL2 000000  
 i2LCD_String_xy@location 000E                  intlevel2 0000                i2MSdelay@i 0003  
              i2MSdelay@j 0005                i2_LCD_Char 0D90               _UART_Buffer 0060  
  __size_of_LCD_String_xy 0038  
